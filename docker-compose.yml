version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: shuttle_booking
      POSTGRES_USER: shuttle_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secure_password_change_me}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - shuttle_network

  # Next.js Application
  app:
    build: .
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://shuttle_user:${DB_PASSWORD:-secure_password_change_me}@db:5432/shuttle_booking
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=https://tjoeftjaf.xyz
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}
      - DEFAULT_CREDIT_COST=${DEFAULT_CREDIT_COST:-25}
      - SERVICE_AREA_RADIUS_KM=${SERVICE_AREA_RADIUS_KM:-5}
      - BOOKING_CUTOFF_MINUTES=${BOOKING_CUTOFF_MINUTES:-30}
      - CRON_SECRET=${CRON_SECRET}
      - PAYFAST_MERCHANT_ID=${PAYFAST_MERCHANT_ID}
      - PAYFAST_MERCHANT_KEY=${PAYFAST_MERCHANT_KEY}
      - PAYFAST_PASSPHRASE=${PAYFAST_PASSPHRASE}
      - PAYFAST_SANDBOX=${PAYFAST_SANDBOX:-false}
      - PAYFAST_RETURN_URL=https://tjoeftjaf.xyz/credits/success
      - PAYFAST_CANCEL_URL=https://tjoeftjaf.xyz/credits/cancel
      - PAYFAST_NOTIFY_URL=https://tjoeftjaf.xyz/api/payments/webhook
    depends_on:
      - db
    ports:
      - "3000:3000"
    networks:
      - shuttle_network
    volumes:
      - ./prisma:/app/prisma

  # Nginx Reverse Proxy with SSL
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl/certs:ro
      - certbot_conf:/etc/letsencrypt
      - certbot_www:/var/www/certbot
    depends_on:
      - app
    networks:
      - shuttle_network

  # Certbot for SSL certificates
  certbot:
    image: certbot/certbot
    restart: "no"
    volumes:
      - certbot_conf:/etc/letsencrypt
      - certbot_www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  postgres_data:
  certbot_conf:
  certbot_www:

networks:
  shuttle_network:
    driver: bridge